theme(axis.text.x=element_text(angle=-45, hjust=0.001))
ggplot(gas_factors, aes(DATE)) +
geom_line(aes(y = `US gasoline price`, colour = "GasPrice")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
ggplot(gas_factors, aes(DATE)) +
geom_line(aes(`US gasoline price`, colour = "GasPrice")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
ggplot(gas_factors, aes(x=DATE)) +
geom_line(aes(y = `US gasoline price`, colour = "GasPrice")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
ggplot(gas_factors) +
geom_line(aes(x=DATE, y = `US gasoline price`, colour = "GasPrice")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
ggplot() +
geom_line(aes(x=DATE, y = `US gasoline price`, data=gas_factors, colour = "GasPrice")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
ggplot() +
geom_line(aes(x =gas_facots$DATE, y = `US gasoline price`, data=gas_factors, colour = "GasPrice")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
ggplot() +
geom_line(aes(x = DATE, y = `US gasoline price`, data=gas_factors, colour = "GasPrice")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
ggplot(data=gas_factors, aes(x = DATE, y = `US gasoline price`) +
geom_line(colour = "GasPrice")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
ggplot(data=gas_factors, aes(x = DATE, y = `US gasoline price`, group=1) +
geom_line(colour = "GasPrice")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
ggplot(data=gas_factors, aes(x = DATE, y = `US gasoline price`, group=1)) +
geom_line(colour = "GasPrice")) +
ggplot(data=gas_factors, aes(x = DATE, y = `US gasoline price`, group=1)) +
geom_line(colour = "GasPrice") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
ggplot(data=gas_factors, aes(x = DATE, y = `US gasoline price`, group=1)) +
geom_line() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
plot <- ggplot(data=gas_factors, aes(x = DATE, y = `US gasoline price`, group=1)) +
geom_line() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
plot
plot <- plot +  geom_line(aes(y = `Saudi Production Change Crude oil`, colour = "production of Crude oil"))
plot
plot <- plot +  geom_line(aes(y = `gasoline U.S. refinery production`, colour = "US refinery gasoline production"))
plot
plot <- plot + geom_line(aes(y = gasoline_net_imports, colour = "gasoline_net_imports")) + labs(x = "Date", y = "Factos",
title = "Trend For Factos Might Effect Gasoline Prices")
plot
plot <- ggplot(data=gas_factors, aes(x = DATE, y = `US gasoline price`, group=1)) +
geom_line(colour = "GasPrice") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
plot
plot <- ggplot(data=gas_factors, aes(x = DATE, y = `US gasoline price`, group=1)) +
geom_line(colour = "GasPrice") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
plot
plot <- ggplot(data=gas_factors, aes(x = DATE, y = `US gasoline price`, group=1)) +
geom_line() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "GasPrice")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
plot
plot <- ggplot(data=gas_factors, aes(x = DATE, y = `US gasoline price`, group=1)) +
geom_line(aes(y = `US gasoline price`, colour = "GasPrice")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
plot
plot <- ggplot(data=gas_factors, aes(x = DATE, y = `US gasoline price`, group=1)) +
geom_line(aes(y = `US gasoline price`, colour = "GasPrice")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
plot
plot <- ggplot(data=gas_factors, aes(x = DATE, y = `US gasoline price`, group=1)) +
geom_line(aes(y = `US gasoline price`, colour = "GasPrice")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
theme(axis.text.x=element_text(angle=-45, hjust=0.001))
plot <- plot +  geom_line(aes(y = `Saudi Production Change Crude oil`, colour = "production of Crude oil"))
plot <- plot +  geom_line(aes(y = `gasoline U.S. refinery production`, colour = "US refinery gasoline production"))
plot <- plot + geom_line(aes(y = gasoline_net_imports, colour = "gasoline_net_imports")) + labs(x = "Date", y = "Factos",
title = "Trend For Factos Might Effect Gasoline Prices")
plot
library(stats)
# Load Libraries
library(lattice)
library(foreign)
library(MASS)
library(car)
install.packages("MASS")
install.packages("car")
# Load Libraries
library(lattice)
library(foreign)
library(MASS)
library(car)
require(stats)
require(stats4)
library(KernSmooth)
library(fastICA)
install.packages("fastICA")
# Load Libraries
library(lattice)
library(foreign)
library(MASS)
require(stats)
require(stats4)
library(KernSmooth)
library(fastICA)
library(cluster)
library(leaps)
install.packages("leaps")
# Load Libraries
library(lattice)
library(foreign)
library(MASS)
require(stats)
require(stats4)
library(KernSmooth)
library(fastICA)
library(cluster)
library(leaps)
library(mgcv)
library(rpart)
library(pan)
install.packages("pan")
# Load Libraries
library(lattice)
library(foreign)
library(MASS)
require(stats)
require(stats4)
library(KernSmooth)
library(fastICA)
library(cluster)
library(leaps)
library(mgcv)
library(rpart)
library(pan)
library(mgcv)
library(DAAG)
install.packages("DAAG")
# Load Libraries
library(lattice)
library(foreign)
library(MASS)
require(stats)
require(stats4)
library(KernSmooth)
library(fastICA)
library(cluster)
library(leaps)
library(mgcv)
library(rpart)
library(pan)
library(mgcv)
library(DAAG)
library("TTR")
library(tis)
install.packages("tis")
# Load Libraries
library(lattice)
library(foreign)
library(MASS)
require(stats)
require(stats4)
library(KernSmooth)
library(fastICA)
library(cluster)
library(leaps)
library(mgcv)
library(rpart)
library(pan)
library(mgcv)
library(DAAG)
library("TTR")
library(tis)
require("datasets")
require(graphics)
library("forecast")
# Load Libraries
library(lattice)
library(foreign)
library(MASS)
require(stats)
require(stats4)
library(KernSmooth)
library(fastICA)
library(cluster)
library(leaps)
library(mgcv)
library(rpart)
library(pan)
library(mgcv)
library(DAAG)
library("TTR")
library(tis)
require("datasets")
require(graphics)
install.packages("forecast")
library("forecast")
install.packages("astsa")
#require(astsa)
library(xtable)
install.packages("xtable")
# Load Libraries
library(lattice)
library(foreign)
library(MASS)
require(stats)
require(stats4)
library(KernSmooth)
library(fastICA)
library(cluster)
library(leaps)
library(mgcv)
library(rpart)
library(pan)
library(mgcv)
library(DAAG)
library("TTR")
library(tis)
require("datasets")
require(graphics)
#install.packages("forecast")
library("forecast")
install.packages("astsa")
#require(astsa)
library(xtable)
library(stats)
# Read in the data into a data file and attach names:
z=read.table("C:/Users/miaom/OneDrive/Econ144 Economic Forecasting/labordata.dat")
names(z)= c("male","female","total")
attach(z)
# Convert data to time series format:
male_ts<-ts(male,start=1948,freq=12)
t<-seq(1948, 1991,length=length(male_ts))
View(z)
t
male_ts
#Linear Fit
m1=lm(male_ts~t)
quartz()
par(mfrow=c(2,1))
plot(male_ts,ylab="Participation Rate (Male)", xlab="Time", lwd=2, col='skyblue3',ylim=c(75,84), xlim=c(1968,1995))
setwd("C:/Users/miaom/OneDrive/DataCamp/Class/Final Project")
gas_stock <- read.csv('Gasoline_price',check.names = F,stringsAsFactors = F)
gas_stock <- read.csv('Gasoline_price.csv',check.names = F,stringsAsFactors = F)
View(gas_stock)
View(gas_stock)
# Convert data to time series format:
price_ts<-ts(Gasoline_Prices,start=2001,freq=52)
gas_price <- read.csv('Gasoline_price.csv',check.names = F,stringsAsFactors = F)
# Convert data to time series format:
price_ts<-ts(gas_price$Gasoline_Prices,start=2001,freq=52)
price_ts
t<-seq(2001, 2021,length=length(price_ts))
t
#Linear Fit
m1=lm(price_ts~t)
par(mfrow=c(2,1))
plot(price_ts,ylab="GasolinePrice", xlab="Time", lwd=2, col='skyblue3',ylim=c(-1,8), xlim=c(2001,2021))
plot(price_ts,ylab="GasolinePrice", xlab="Time", lwd=2, col='skyblue3',ylim=c(0,6), xlim=c(2001,2021))
#Linear Fit
m1=lm(male_ts~t)
# Read in the data into a data file and attach names:
z=read.table("C:/Users/miaom/OneDrive/Econ144 Economic Forecasting/labordata.dat")
names(z)= c("male","female","total")
attach(z)
# Convert data to time series format:
male_ts<-ts(male,start=1948,freq=12)
male_ts
t<-seq(1948, 1991,length=length(male_ts))
#Linear Fit
m1=lm(male_ts~t)
quartz()
par(mfrow=c(2,1))
plot(male_ts,ylab="Participation Rate (Male)", xlab="Time", lwd=2, col='skyblue3',ylim=c(75,84), xlim=c(1968,1995))
#The next commands adds the U.S. recession bands
nberShade()
lines(t,m1$fit,col="red3",lwd=2)
plot(t,m1$res, ylab="Residuals",type='l',xlab="Time")
setwd("C:/Users/miaom/OneDrive/DataCamp/Class/Final Project")
gas_price <- read.csv('Gasoline_price.csv',check.names = F,stringsAsFactors = F)
# Convert data to time series format:
price_ts<-ts(gas_price$Gasoline_Prices,start=2001,freq=52)
price_ts
t<-seq(2001, 2021,length=length(price_ts))
t
#Linear Fit
m1=lm(price_ts~t)
par(mfrow=c(2,1))
plot(price_ts,ylab="GasolinePrice", xlab="Time", lwd=2, col='skyblue3',ylim=c(0,6), xlim=c(2001,2021))
#The next commands adds the U.S. recession bands
nberShade()
lines(t,m1$fit,col="red3",lwd=2)
plot(t,m1$res, ylab="Residuals",type='l',xlab="Time")
m2=lm(price_ts~t+I(t^2))
par(mfrow=c(2,1))
plot(male_ts,ylab="GasolinePrice", xlab="Time", lwd=2, col='skyblue3',ylim=c(0,10), xlim=c(2001,2021))
lines(t,m2$fit,col="red3",lwd=2)
plot(t,m2$res, ylab="Residuals",type='l',xlab="Time")
m3=lm(log(price_ts) ~ t)
quartz()
#Log-Linear Fit
m3=lm(log(price_ts) ~ t)
par(mfrow=c(2,1))
plot(log(price_ts),ylab="GasolinePrice", xlab="Time", lwd=2, col='skyblue3', xlim=c(2001,2021))
lines(t,m3$fit,col="red3",lwd=2)
plot(t,m3$res, ylab="Residuals",type='l',xlab="Time")
#Exponential Fit
ds=data.frame(x=t, y=price_ts)
par(mfrow=c(2,1))
plot(price_ts,ylab="GasolinePrice", xlab="Time", lwd=2, col='skyblue3',ylim=c(0,6), xlim=c(2001,2021))
#lines(t,m1$fit,col="green",lwd=2)
m4=nls(y ~ exp(a + b * t),data=ds, start = list(a = 0, b = 0))
lines(ds$x, predict(m4, list(x = ds$x)),col="red3",lwd=2)
plot(t,residuals(m4), ylab="Residuals",type='l',xlab="Time")
summary(m4)
AIC(m1,m2,m3,m4)
BIC(m1,m2,m3,m4)
plot(stl(price_ts,s.window="periodic"))
#Log-Linear Fit
m3=lm(log(price_ts) ~ t)
par(mfrow=c(2,1))
plot(log(price_ts),ylab="GasolinePrice", xlab="Time", lwd=2, col='skyblue3', xlim=c(2001,2021))
lines(t,m3$fit,col="red3",lwd=2)
plot(t,m3$res, ylab="Residuals",type='l',xlab="Time")
#-------------[4] Holt-Winters Filter--------------
hwfit<-HoltWinters(price_ts)
hwpred <- predict(hwfit, 60, prediction.interval = TRUE,level=0.5)
plot(hwfit,hwpred,ylab="GasolinePrice", xlab="Time",xlim=c(2001,2021))
#-------------[3] TREND FORECASTING--------------
tn=data.frame(t=seq(2001,2021))
pred=predict(lm(price_ts ~ t), tn, se.fit = TRUE)
#plot(c(male_ts,pred$fit),type='l',xlim=c(1940,2000))
pred.plim = predict(lm(price_ts ~ t),tn, level =0.95, interval="prediction")
pred.clim = predict(lm(price_ts ~ t), tn,level=0.95, interval="confidence")
matplot(tn$t,cbind(pred.clim, pred.plim[,-1]),
lty=c(1,1,1,3,3), type="l", lwd=2, ylab="predicted y",xlab="Time")
z=read.table("C:/Users/miaom/OneDrive/Econ144 Economic Forecasting/labordata.dat")
names(z)= c("male","female","total")
attach(z)
# Convert data to time series format:
male_ts<-ts(male,start=1948,freq=12)
male_ts
t<-seq(1948, 1991,length=length(male_ts))
t
#Linear Fit
m1=lm(male_ts~t)
quartz()
#Linear Fit
m1=lm(male_ts~t)
quartz()
#Linear Fit
m1=lm(male_ts~t)
par(mfrow=c(2,1))
plot(male_ts,ylab="Participation Rate (Male)", xlab="Time", lwd=2, col='skyblue3',ylim=c(75,84), xlim=c(1968,1995))
#The next commands adds the U.S. recession bands
nberShade()
lines(t,m1$fit,col="red3",lwd=2)
plot(t,m1$res, ylab="Residuals",type='l',xlab="Time")
tn=data.frame(t=seq(1992,1999))
pred=predict(lm(male_ts ~ t), tn, se.fit = TRUE)
#plot(c(male_ts,pred$fit),type='l',xlim=c(1940,2000))
pred.plim = predict(lm(male_ts ~ t),tn, level =0.95, interval="prediction")
pred.clim = predict(lm(male_ts ~ t), tn,level=0.95, interval="confidence")
matplot(tn$t,cbind(pred.clim, pred.plim[,-1]),
lty=c(1,1,1,3,3), type="l", lwd=2, ylab="predicted y",xlab="Time")
tn=data.frame(t=seq(2022,2023))
pred=predict(lm(price_ts ~ t), tn, se.fit = TRUE)
#-------------[3] TREND FORECASTING--------------
tn=data.frame(t=seq(2021,2023))
pred=predict(lm(price_ts ~ t), tn, se.fit = TRUE)
#-------------[3] TREND FORECASTING--------------
tn=data.frame(t=seq(2021,2023))
pred=predict(lm(price_ts ~ t), tn, se.fit = TRUE)
length(t)
length(tn)
tn
t
#-------------[3] TREND FORECASTING--------------
tn=data.frame(t=seq(2021,2023),length=length(price_ts))
tn
#-------------[3] TREND FORECASTING--------------
tn=data.frame(t=seq(2021,2023, length=length(price_ts))
tn
tn = data.frame(t=2022,2026 ,length=length(price_ts))
tn
#-------------[3] TREND FORECASTING--------------
tn = data.frame(t = seq(2022,2026 ,length=length(price_ts)))
tn
length(tn)
length(t)
pred=predict(lm(price_ts ~ t), tn, se.fit = TRUE)
#-------------[3] TREND FORECASTING--------------
tn = data.frame(t = seq(2022,2026 ,length=length(t)))
pred=predict(lm(price_ts ~ t), tn, se.fit = TRUE)
length(tn)
t<-seq(2001, 2021,length=length(price_ts))
t
length(t)
#-------------[3] TREND FORECASTING--------------
tn =seq(2022,2026 ,length=length(t))
length(tn)
pred=predict(lm(price_ts ~ t), tn, se.fit = TRUE)
z=read.table("C:/Users/miaom/OneDrive/Econ144 Economic Forecasting/labordata.dat")
names(z)= c("male","female","total")
attach(z)
# Convert data to time series format:
male_ts<-ts(male,start=1948,freq=12)
male_ts
t<-seq(1948, 1991,length=length(male_ts))
t
length(t)
#-------------[3] TREND FORECASTING--------------
tn=data.frame(t=seq(1992,1999))
tn
t<-seq(2001, 2021,length=length(price_ts))
t
#-------------[3] TREND FORECASTING--------------
tn = data.frame(t = seq(2022,2029)
#-------------[3] TREND FORECASTING--------------
tn = data.frame(t = seq(2022,2029))
length(tn)
pred=predict(lm(price_ts ~ t), tn, se.fit = TRUE)
#plot(c(male_ts,pred$fit),type='l',xlim=c(1940,2000))
pred.plim = predict(lm(price_ts ~ t),tn, level =0.95, interval="prediction")
pred.clim = predict(lm(price_ts ~ t), tn,level=0.95, interval="confidence")
matplot(tn$t,cbind(pred.clim, pred.plim[,-1]),
lty=c(1,1,1,3,3), type="l", lwd=2, ylab="predicted y",xlab="Time")
tn = data.frame(t = seq(2022,2029))
pred=predict(lm(price_ts ~ t), tn, se.fit = TRUE)
#plot(c(male_ts,pred$fit),type='l',xlim=c(1940,2000))
pred.plim = predict(lm(price_ts ~ t),tn, level =0.95, interval="prediction")
pred.clim = predict(lm(price_ts ~ t), tn,level=0.95, interval="confidence")
matplot(tn$t,cbind(pred.clim, pred.plim[,-1]),
lty=c(1,1,1,3,3), type="l", lwd=2, ylab="predicted y",xlab="Time")
#-------------[4] Holt-Winters Filter--------------
hwfit<-HoltWinters(price_ts)
hwpred <- predict(hwfit, 60, prediction.interval = TRUE,level=0.5)
plot(hwfit,hwpred,ylab="GasolinePrice", xlab="Time",xlim=c(2001,2029))
hwfit<-HoltWinters(price_ts)
hwpred <- predict(hwfit, 60, prediction.interval = TRUE,level=0.5)
plot(hwfit,hwpred,ylab="GasolinePrice", xlab="Time",xlim=c(2001,2029))
#-------------[4] Holt-Winters Filter--------------
hwfit<-HoltWinters(price_ts)
hwpred <- predict(hwfit, 60, prediction.interval = TRUE,level=0.5)
plot(hwfit,hwpred,ylab="GasolinePrice", xlab="Time",xlim=c(2001,2029))
plot(stl(price_ts,s.window="periodic"))
